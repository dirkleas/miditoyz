#!/usr/bin/env python3

#
# mididump - dump midi file events, similar to midiraw w/t --debug option
#
# notes:
#   - bpm = 60,000,000 / int.from_bytes(tempo_byte_data, byteorder='big')
#

import typer
from music21 import midi

app = typer.Typer()


def list_midi_metadata(filename: str):
    mf = midi.MidiFile()
    mf.open(filename)
    mf.read()
    mf.close()

    for i, track in enumerate(mf.tracks):
        typer.echo(f"track {i}:")
        time_delta = 0
        for event in track.events:
            if isinstance(event, midi.DeltaTime):
                time_delta = event.time
            elif isinstance(event, midi.MidiEvent):
                if event.type.name == "SET_TEMPO":
                    tempo = int.from_bytes(event.data, byteorder="big")
                    bpm = round(60_000_000 / tempo)
                    typer.echo(f"  TEMPO: {tempo:,} MPQN, {bpm} BPM")
                else:
                    typer.echo(f"{event.type}: {event.type.name}")
                    typer.echo(f"  {event}, time={time_delta}")


@app.command()
def main(
    filename: str = typer.Argument(
        ..., help="The path to the MIDI file to be analyzed."
    )
):
    """Dump a MIDI file in raw text format. if you need details, use "midiraw --debug" instead"""
    list_midi_metadata(filename)


if __name__ == "__main__":
    app()
