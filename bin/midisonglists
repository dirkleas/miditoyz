#!/usr/bin/env python3

# Copyright (c) 2023 Dirk Leas
# This software is released under the MIT License.
# https://opensource.org/licenses/MIT

#
# songlists - generate songlist for folders with .mid files
#
# todo:
#   - tbd

import os
import mido
import typer


def generate_songlist(directory: str, base_directory: str):
    # Generate a songlist for the current directory containing MIDI files
    midi_files = []
    for file in os.listdir(directory):
        file_path = os.path.join(directory, file)
        if os.path.isfile(file_path) and file.lower().endswith(".mid"):
            midi_files.append(file_path)

    if midi_files:
        midi_files.sort()  # Sort the MIDI files alphabetically
        songlist_path = os.path.join(directory, "_songlist.txt")
        with open(songlist_path, "w") as songlist_file:
            folder_parts = os.path.abspath(directory).split(os.path.sep)[3:]
            folder_title = os.path.join(*folder_parts) if folder_parts else ""
            songlist_file.write(
                f'"{folder_title}" contains ({len(midi_files)}) songs:\n\n'
            )
            for midi_file in midi_files:
                try:
                    midi = mido.MidiFile(midi_file)
                    song_name = ""
                    for msg in midi:
                        if msg.type == "track_name":
                            song_name = msg.name
                            break

                    songlist_file.write(f"{os.path.basename(midi_file)}: {song_name}\n")

                except:
                    pass

        print(f"Songlist generated for folder: {folder_title}")
    else:
        print(f"No MIDI files found in folder: {directory}")

    # Recursively search for MIDI files in subdirectories
    for root, dirs, _ in os.walk(directory):
        for dir in dirs:
            subdir_path = os.path.join(root, dir)
            generate_songlist(subdir_path, base_directory)


def main(
    directory: str = typer.Argument(..., help="root directory for MIDI song collection")
):
    """Generate a songlist for a directory and all its subdirectories containing MIDI files
    named \"_songlist.txt\", including fully-qualified directory name and number of songs in the directory.
    """
    directory = os.path.abspath(directory)
    typer.echo(f'Scanning directory: "{directory}"')
    generate_songlist(directory, directory)


if __name__ == "__main__":
    typer.run(main)
